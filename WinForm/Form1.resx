<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>